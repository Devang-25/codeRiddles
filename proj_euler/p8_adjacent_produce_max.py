#!/bin/env python3

# usage:
# $ ./p8_adjacent_produce_max.py 13

import re
import sys
from functools import reduce
from pprint import pprint
import numpy as np

N = int(sys.argv[1])

x = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450

xx = re.split('0|1', str(x))
xx = [i for i in xx if len(i) >= N]

z = lambda x,y: x*y
# or => from operator import mul

def find_max(ip_ranges, N):
    list_of_Ns = [[int(i) for i in list(seq)] for seq in ip_ranges if len(seq)==N]
    # print(list_of_Ns)
    leftover_set = [seq for seq in ip_ranges if len(seq) > N]
    # print(leftover_set)
    for ip_list in leftover_set:
        ip_list = [int(i) for i in list(ip_list)]
        list_of_Ns.extend(list(zip(*(ip_list[i:] for i in range(N)))))
    list_of_Ns = np.array(list_of_Ns)
    print("all possible sequences: \n", list_of_Ns)
    prod_all = np.array([reduce(z, seq) for seq in list_of_Ns])
    return (list_of_Ns[np.where(prod_all == prod_all.max())], prod_all.max())

possible_matches, max_val = find_max(xx, N)

possible_matches = [''.join([str(i) for i in seq]) for seq in possible_matches]

print("largest product possible sequences: ")
pprint(possible_matches)
print("largest product value = ", max_val)
