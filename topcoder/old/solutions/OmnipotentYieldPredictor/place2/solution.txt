My Approach:

I used matrix factorization to solve this prediction problem (It is a commonly used algorithm in recommend system, see attached paper).

The model in my submitted code is:
PredY(X)=B+B_X.MaterialID+B_X.ExperimentID+B_X.Herb+B_X.repid+B_X.year+dot(P_X.MaterialID+P_X.ExperimentID+P_X.Herb+P_X.repid+P_X.year,Q_<X.loccd,X.year>+Q_X.loccd+Q_X.year+Q_X.repid+Q_X.ExperimentID).
Where X represent the experiment settings. B represents bias for soybean seed and environment, etc. P, Q are vectors representing the latent factors for soybean seed and environment. dot represent the dot pruduct of two vector.
The loss function to minimize is:
loss function=sigma((Yij-PredYij)^2)+lambda(sigma(|pi|)+sigma(|qj|))

For the implementation,  I wrote an independent class for matrix factorization by referring the structure of the svdFeature toolkit (see attached paper).

Parameters

The parameters are manually set according to local experiment. local experiments are carried out by splitting the training data into two part for testing (with 70% for training and 30% for evaluating).

Meaning of parameters:
K in svdFeature: the dimension of the latent factor
lambda in svdFeature: the regularization term, prevent the over fitting.
gamma in svdFeature: the speed of learning, the larger the fast, but large gamma result in less accuracy or even NaN

Additional Code

No additional code used in this competition.
