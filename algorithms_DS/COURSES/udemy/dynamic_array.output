
using inbuilt list [] ....

Length:   0; Size in bytes:   64 
Length:   1; Size in bytes:   96 
Length:   2; Size in bytes:   96 
Length:   3; Size in bytes:   96 
Length:   4; Size in bytes:   96 
Length:   5; Size in bytes:  128 
Length:   6; Size in bytes:  128 
Length:   7; Size in bytes:  128 
Length:   8; Size in bytes:  128 
Length:   9; Size in bytes:  192 
Arr:  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]

...........and now:
    using ctypes.py_object for a custom DynamicArray
    
Length:   1; Size in bytes:   56; New capacity:   1
Length:   2; Size in bytes:   56; New capacity:   2
Arr:  [1, 2]
	list(arr) succeeded

Length:   3; Size in bytes:   56; New capacity:   4

ERROR while executing list(arr) - ValueError: PyObject is NULL
falling back to manual access index by index, one at a time..
Arr: [1,2,aaa]

    # at this point, list(arr) fails. This is probably because 
    capacity exceeds length. And so, it seems ctypes.py_object 
    wouldn't comply with list() anymore. 

    Perhaps, we need to read more about how ctypes work by RTFM'g the damn thing.
    
Length:   4; Size in bytes:   56; New capacity:   4
Arr:  [1, 2, 'aaa', 'bbb']
extending arr to add:
 [27, 59, 79, 22, 83, 91, 68, 67, 13, 11, 66, 5, 40, 57, 96, 30, 1, 89, 72, 35, 29, 3, 86, 70, 9, 23, 2, 25, 46, 47, 42, 55, 58, 12, 82, 73, 51, 93, 6, 24, 20, 62, 18, 69, 45, 14, 28, 99, 98, 81, 88, 31, 48, 49, 43, 77, 60, 33, 64, 4]
 of length 60..using a custom extend() method
Total new Length:  64; Size in bytes:   56; New capacity:  68
extending arr to add:
 [10, 6, 42, 47, 41, 13, 2, 32, 31, 7, 26, 36, 40, 19, 1, 39, 49, 4, 37, 28]
 of length 20..using a custom extend() method
Total new Length:  84; Size in bytes:   56; New capacity: 156
Arr: [1,2,aaa,bbb,27,...,28,...28] and so on..
